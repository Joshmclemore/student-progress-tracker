
exports.up = async function(knex) {
  await knex.schema
    .createTable('students', tbl => {
        tbl.increments('student_id')
        tbl.string('student_name').notNullable()
        tbl.integer('student_age').notNullable()
        tbl.string('student_grade').notNullable()
    })
    .createTable('reading_tests', tbl => {
        tbl.increments('rt_id')
        tbl.datetime('rt_date').notNullable()
        tbl.string('rt_test_type').defaultTo('letter').notNullable()
        tbl.boolean('rt_complete').notNullable().defaultTo(false)
        tbl.string('rt_missed', 100)
        tbl.string('rt_comments', 300)
        tbl.integer('student_id')
        .unsigned()
        .notNullable()
        .references('student_id')
        .inTable('students')
        .onDelete('RESTRICT')
        .onUpdate('RESTRICT')
    })
    .createTable('reading_goals', tbl => {
        tbl.increments('rg_id')
        tbl.integer('rg_word_count').notNullable()
        tbl.integer('rg_letter_count').notNullable()
        tbl.string('rg_comments', 300)
    })
    .createTable('writing_tests', tbl => {
        tbl.increments('wt_id')
        tbl.datetime('wt_date').notNullable()
        tbl.string('wt_test_type').defaultTo('letter').notNullable()
        tbl.boolean('wt_complete').notNullable().defaultTo(false)
        tbl.string('wt_missed', 100)
        tbl.string('wt_comments', 300)
        tbl.integer('student_id')
        .unsigned()
        .notNullable()
        .references('student_id')
        .inTable('students')
        .onDelete('RESTRICT')
        .onUpdate('RESTRICT')
    })
    .createTable('writing_goals', tbl => {
        tbl.increments('wg_id')
        tbl.integer('wg_word_count').notNullable()
        tbl.integer('wg_letter_count').notNullable()
        tbl.string('wg_comments', 300)
    })
    .createTable('math_tests', tbl => {
        tbl.increments('mt_id')
        tbl.datetime('wt_date').notNullable()
        tbl.string('mt_test_type').defaultTo('counting').notNullable()
        tbl.integer('mt_score', 5)
        tbl.string('mt_comments', 300)
        tbl.integer('student_id')
        .unsigned()
        .notNullable()
        .references('student_id')
        .inTable('students')
        .onDelete('RESTRICT')
        .onUpdate('RESTRICT')
    })
    .createTable('math_goals', tbl => {
        tbl.increments('mg_id')
        tbl.integer('mg_total_sorted').notNullable()
        tbl.integer('mg_total_counted').notNullable()
        tbl.string('mg_comments', 300)
    })
    .createTable('students_goals', tbl => {
        tbl.increments()
        tbl.integer('student_id')
        .unsigned()
        .notNullable()
        .references('student_id')
        .inTable('students')
        .onDelete('RESTRICT')
        .onUpdate('RESTRICT')
        tbl.integer('rg_id')
        .unsigned()
        .notNullable()
        .references('rg_id')
        .inTable('reading_goals')
        .onDelete('RESTRICT')
        .onUpdate('RESTRICT')
        tbl.integer('wg_id')
        .unsigned()
        .notNullable()
        .references('wg_id')
        .inTable('writing_goals')
        .onDelete('RESTRICT')
        .onUpdate('RESTRICT')
        tbl.integer('mg_id')
        .unsigned()
        .notNullable()
        .references('mg_id')
        .inTable('math_goals')
        .onDelete('RESTRICT')
        .onUpdate('RESTRICT')
    })
};


exports.down = async function(knex) {
  await knex.schema
    .dropTableIfExists('students_goals', tbl => {})
    .dropTableIfExists('math_goals', tbl => {})
    .dropTableIfExists('math_tests', tbl => {})
    .dropTableIfExists('writing_goals', tbl => {})
    .dropTableIfExists('writing_tests', tbl => {})
    .dropTableIfExists('reading_goals', tbl => {})
    .dropTableIfExists('reading_tests', tbl => {})
    .dropTableIfExists('students', tbl => {})
};
